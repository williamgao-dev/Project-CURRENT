<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Project">


    <!-- Text for the header / title -->
    <Style x:Key="HeaderText" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource BaseTextBlockStyle}">
        <Setter Property="Foreground" Value="{StaticResource ForegroundMainBrush}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="0 6" />
    </Style>

    <!-- Default text box style -->
    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="FontFamily" Value="LatoRegular" />
        <Setter Property="FontSize" Value="{StaticResource FontSizeLarge}" />
        <Setter Property="BorderBrush" Value="{StaticResource WordBlueBrush}" />
        <Setter Property="BorderThickness" Value="0 0 0 1" />
        <Setter Property="Margin" Value="0 5 0 5" />
        <Setter Property="Padding" Value="10" />

        <Setter Property="Background" Value="White"></Setter>
        <Setter Property="Foreground" Value="Black"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">

                    <Grid>
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="False"
                                          HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" />
                        </Border>

                        <TextBlock IsHitTestVisible="False"
                                   Text="{TemplateBinding Tag}"
                                   x:Name="placeholder"
                                   FontFamily="{StaticResource LatoThin}"
                                   Padding="{TemplateBinding Padding}"
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                   Foreground="{TemplateBinding Foreground}">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <!-- Default, watermark text will be collapsed -->
                                    <Setter Property="Visibility" Value="Collapsed" />
                                    <Style.Triggers>
                                        <!-- When the value of text (when empty) is nothing, the visibility of the placeholder will be set to
                                             visible -->
                                        <DataTrigger
                                            Binding="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}"
                                            Value="">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>

                        </TextBlock>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.56" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="#FF7EB4EA" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="BorderBrush" Value="#FF569DE5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Password Box style -->
    <Style x:Key="PasswordTextBoxStyle" TargetType="{x:Type PasswordBox}" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="FontFamily" Value="LatoRegular" />
        <Setter Property="FontSize" Value="{StaticResource FontSizeLarge}" />
        <Setter Property="BorderBrush" Value="{StaticResource WordBlueBrush}" />
        <Setter Property="BorderThickness" Value="0 0 0 1" />
        <Setter Property="Margin" Value="0 5 0 5" />
        <Setter Property="Padding" Value="10" />

        <Setter Property="Background" Value="White"></Setter>
        <Setter Property="Foreground" Value="Black"></Setter>

        <Setter Property="local:MonitorPasswordProperty.Value" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    
                    <Grid>
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="False"
                                          HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" />
                        </Border>

                        <TextBlock IsHitTestVisible="False"
                                   Text="{TemplateBinding Tag}"
                                   x:Name="placeholder"
                                   FontFamily="{StaticResource LatoThin}"
                                   Padding="{TemplateBinding Padding}"
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="Center"
                                   Foreground="{StaticResource ForegroundVeryDarkBrush}"
                                   Visibility="{TemplateBinding local:HasTextProperty.Value, Converter={local:BooleanToVisibilityHiddenConverter}}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.56" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="#FF7EB4EA" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="BorderBrush" Value="#FF569DE5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- Spinning text -->
    <Style x:Key="SpinningText" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource BaseEmptyTextBlockStyle}">

        <Setter Property="FontFamily" Value="{StaticResource FontAwesome}"></Setter>
        <Setter Property="HorizontalAlignment" Value="Center"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="RenderTransformOrigin" Value="0.5, 0.5"></Setter>
        <Setter Property="Visibility" Value="Visible"></Setter>
        <Style.Resources>
            <Storyboard x:Key="Spin">
                <DoubleAnimation
                    Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                    From="0"
                    To="360"
                    Duration="0:0:1.5"
                    RepeatBehavior="Forever">
                </DoubleAnimation>
            </Storyboard>
        </Style.Resources>
        
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=IsVisible}" Value="True">
                <DataTrigger.EnterActions>
                    <BeginStoryboard Name="SpinStoryboard" Storyboard="{StaticResource Spin}"></BeginStoryboard>
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <RemoveStoryboard BeginStoryboardName="SpinStoryboard"></RemoveStoryboard>
                </DataTrigger.ExitActions>
            </DataTrigger>
        </Style.Triggers>
    </Style>


</ResourceDictionary>